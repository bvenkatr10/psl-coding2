"0","one_var_lasso = function(r, x, lam){"
"0","  ###############"
"0","  xx = sum(x^2)"
"0","  xr = sum(r * x)"
"0","  b = (abs(xr) - lam/2)/xx"
"0","  b = sign(xr) * ifelse(b > 0, b, 0)"
"0","  return(b)"
"0","  ###############"
"0","}"
"0","MyLasso = function(X, y, lam.seq, maxit = 500) {"
"0","    "
"0","    # X: n-by-p design matrix without the intercept "
"0","    # y: n-by-1 response vector "
"0","    # lam.seq: sequence of lambda values (arranged from large to small)"
"0","    # maxit: number of updates for each lambda "
"0","    # Center/Scale X"
"0","    # Center y"
"0","  "
"0","    n = length(y)"
"0","    p = dim(X)[2]"
"0","    nlam = length(lam.seq)"
"0","    "
"0",""
"0","    ##############################"
"0","    # YOUR CODE: "
"0","    # Record the corresponding means and scales"
"0","    means <- colMeans(X)"
"0","    sds <- apply(X, 2, function(x) sqrt((n-1)/n)*sd(x))"
"0","    mean_y <- mean(y)"
"0","  "
"0","  # Center and scale X"
"0","    Xs <- apply(X, MARGIN = 2, FUN = function(x) (x - mean(x))/(sqrt((n-1)/n)*sd(x)))"
"0","  "
"0","  # Center y"
"0","    y <- y - mean_y"
"0","  "
"0","    ##############################"
"0",""
"0","    # Initilize coef vector b and residual vector r"
"0","    b = rep(0, p)"
"0","    r = y"
"0","    B = matrix(nrow = nlam, ncol = p + 1)"
"0","    "
"0","    # Triple nested loop"
"0","    for (m in 1:nlam) {"
"0","        lam = 2 * n * lam.seq[m]"
"0","        for (step in 1:maxit) {"
"0","            for (j in 1:p) {"
"0","                r = r + (Xs[, j] * b[j])"
"0","                b[j] = one_var_lasso(r, Xs[, j], lam)"
"0","                r = r - Xs[, j] * b[j]"
"0","            }"
"0","        }"
"0","        B[m, ] = c(0, b)"
"0","    }"
"0","   "
"0","    ##############################"
"0","    # YOUR CODE:"
"0","   unstand_matrix <- matrix(rep(sds, nlam), nrow = nlam, byrow = T)"
"0","  B[, -1] <- B[, -1]/unstand_matrix"
"0","  "
"0","  B[, 1] <- apply(B[, -1], 1, function(beta) mean_y - sum(means*beta))"
"0","    ##############################"
"0","  return(t(B))"
"0","}"
